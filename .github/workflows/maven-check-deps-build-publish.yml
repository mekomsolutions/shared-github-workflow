name: Check for dependency changes

on:
  workflow_call:
    inputs:
      maven-args:
        default: '-DskipTests=true'
        description: 'Additional arguments to pass to maven'
        required: false
        type: string
      java-version:
        default: '17'
        description: 'Java version to use for building'
        required: false
        type: string
      java-distribution:
        default: 'temurin'
        description: 'Java distribution to use for building'
        required: false
        type: string
      upload-artifacts:
        description: 'Whether to upload build artifacts or not'
        required: false
        type: boolean
        default: false
      artifact-path:
        description: 'Path to the artifact(s) to upload'
        required: false
        type: string
        default: ''
      artifact-name:
        description: 'Name of the artifact(s) to upload'
        required: false
        type: string
        default: 'artifact'
      notify-ocd3:
        description: 'Notify OCD3'
        required: false
        type: boolean
        default: false
      ocd3-webhook-url:
        description: 'Webhook URL'
        required: false
        type: string
        default: 'https://openmrs-cd.mekomsolutions.net/generic-webhook-trigger/invoke'
      check-deps-timeout-minutes:
        description: 'Timeout for checking dependencies in minutes. Default is 10 minutes.'
        required: false
        type: number
        default: 10
      check-deps-maven-args:
        description: 'Maven arguments to use for checking dependencies'
        required: false
        type: string
        default: '-DskipTests'
      check-deps-maven-phase:
        description: 'Maven phase to use for checking dependencies'
        required: false
        type: string
        default: 'compile'
    secrets:
      NEXUS_USERNAME:
        required: true
      NEXUS_PASSWORD:
        required: true
      OCD3_USERNAME:
        required: false
      OCD3_PASSWORD:
        required: false


jobs:
  check-for-dependency-changes:
    timeout-minutes: ${{ inputs.check-deps-timeout-minutes }}
    outputs:
      hasChanged: ${{ steps.compareDependencyReports.outputs.hasChanged }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
          cache: 'maven'

      - name: Set settings.xml
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [{
              "id": "mks-private-repo",
              "username": "${{ secrets.NEXUS_USERNAME }}",
              "password": "${{ secrets.NEXUS_PASSWORD }}"
            },
            {
              "id": "mks-nexus-private",
              "username": "${{ secrets.NEXUS_USERNAME }}",
              "password": "${{ secrets.NEXUS_PASSWORD }}"
            },
            {
              "id": "mks-nexus-public-snapshots",
              "username": "${{ secrets.NEXUS_USERNAME }}",
              "password": "${{ secrets.NEXUS_PASSWORD }}"
            },
            {
              "id": "mks-nexus-public-releases",
              "username": "${{ secrets.NEXUS_USERNAME }}",
              "password": "${{ secrets.NEXUS_PASSWORD }}"
            },
            {
              "id": "mks-nexus-private-snapshots",
              "username": "${{ secrets.NEXUS_USERNAME }}",
              "password": "${{ secrets.NEXUS_PASSWORD }}"
            },
            {
              "id": "mks-nexus-private-releases",
              "username": "${{ secrets.NEXUS_USERNAME }}",
              "password": "${{ secrets.NEXUS_PASSWORD }}"
            }]

      - name: Check for dependency changes
        id: compareDependencyReports
        env:
          MAVEN_ARGS: ${{ inputs.check-deps-maven-args }}
          MAVEN_PHASE: ${{ inputs.check-deps-maven-phase }}
        shell: bash
        run: |
          #!/usr/bin/env bash
          set -e

          # Initialize toPublish to 0
          toPublish=0

          # Run the build (comparison will be done during build)
          mvn --batch-mode --no-transfer-progress clean compile

          # find -comparison.txt files
          while IFS= read -r comparisonFilePath; do
              # Read and test the content
              echo "Found dependency report: $comparisonFilePath"
              
              comparisonResult=$(cat $comparisonFilePath)
              
              case "$comparisonResult" in
              -1)
                  # No remote dependency report found
                  message="No remote dependency report found (comparison report = '-1')."
                  echo $message
                  toPublish=$(echo $toPublish + 1 | bc)
                  ;;
              0)
                  # No dependency change
                  message="No dependency change (comparison report = '0')."
                  echo $message
                  toPublish=$(echo $toPublish + 0 | bc)
                  ;;
              1)
                  # Found dependency changes
                  message="One or more dependency changes detected (comparison report = '1')."
                  echo $message
                  toPublish=$(echo $toPublish + 1 | bc)
                  ;;
              *)
                  # Invalid output in comparison result file
                  echo "Invalid value. Comparison report value is neither -1, 0 or 1."
                  exit 1
                  ;;
              esac

          done < <(find . -type f -name '*-comparison.txt' -print) 

          if [ $toPublish -eq 1 ]; then
              echo "Will publish..."
          else
              echo "Will not publish..."
          fi

          echo toPublish=$toPublish >> "$GITHUB_OUTPUT"

          exit 0


  build:
    needs: check-for-dependency-changes
    if: ${{ needs.check-for-dependency-changes.outputs.hasChanged == '1' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
          cache: 'maven'

      - name: Set settings.xml
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [{
              "id": "mks-private-repo",
              "username": "${{ secrets.NEXUS_USERNAME }}",
              "password": "${{ secrets.NEXUS_PASSWORD }}"
            },
            {
              "id": "mks-nexus-public-snapshots",
              "username": "${{ secrets.NEXUS_USERNAME }}",
              "password": "${{ secrets.NEXUS_PASSWORD }}"
            },
            {
              "id": "mks-nexus-public-releases",
              "username": "${{ secrets.NEXUS_USERNAME }}",
              "password": "${{ secrets.NEXUS_PASSWORD }}"
            },
            {
              "id": "mks-nexus-private-snapshots",
              "username": "${{ secrets.NEXUS_USERNAME }}",
              "password": "${{ secrets.NEXUS_PASSWORD }}"
            },
            {
              "id": "mks-nexus-private-releases",
              "username": "${{ secrets.NEXUS_USERNAME }}",
              "password": "${{ secrets.NEXUS_PASSWORD }}"
            }]

      - name: Build
        run: "mvn --batch-mode --no-transfer-progress clean package ${{ inputs.maven-args }}"

  publish:
    needs: build
    uses: mekomsolutions/shared-github-workflow/.github/workflows/maven-publish.yml@main
    with:
      java-version: ${{ inputs.java-version }}
      java-distribution: ${{ inputs.java-distribution }}
      maven-args: ${{ inputs.maven-args }}
      upload-artifacts: ${{ inputs.upload-artifacts }}
      artifact-path: ${{ inputs.artifact-path }}
      artifact-name: ${{ inputs.artifact-name }}
    secrets:
      NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

  notify-ocd3:
    needs: publish
    if: ${{ inputs.notify-ocd3 }}
    uses: mekomsolutions/shared-github-workflow/.github/workflows/ocd3-notify.yml@main
    with:
      webhook-url: ${{ inputs.ocd3-webhook-url }}
    secrets:
      OCD3_USERNAME: ${{ secrets.OCD3_USERNAME }}
      OCD3_PASSWORD: ${{ secrets.OCD3_PASSWORD }}
